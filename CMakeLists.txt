cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
project(customICP_rgb)
set(PCL_DIR "/usr/share/pcl-1.7/PCLConfig.cmake")
set(BIN_NAME "customICP_rgb")
set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} /usr/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/home/not/code/computer_vision/PCL/customICP_rgb-build/")
#g2o
link_directories(/usr/lib/g2o-20140601/lib/)
#set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} /usr/lib/g2o-20140601/lib/)
find_package(PCL 1.7 REQUIRED COMPONENTS io common registration filters kdtree)

include_directories(/usr/include/eigen3)
include_directories(/usr/include/openni/)
include_directories(/usr/include/pcl/)
include_directories(/usr/include/vtk-5.8/)
include_directories(/usr/lib/g2o-20140601/)
include_directories(/usr/include/pcl/kdtree/impl)
include_directories(/usr/include/pcl/kdtree/)
include_directories(src)
add_definitions(${PCL_DEFINITIONS})

#set(OpenCV_DIR /usr/share/OpenCV/)
set(OpenCV_DIR /home/not/code/computer_vision/PCL/SURF/opencv-2.4.9/lib)
link_directories(${OpenCV_DIR})

MESSAGE(STATUS "DIR::" ${CMAKE_LIBRARY_PATH})
#find_package(OpenCV REQUIRED)
#include_directories(/usr/include/opencv2/)
include_directories(/home/not/code/computer_vision/PCL/SURF/opencv-2.4.9/include)
include_directories(/home/not/code/computer_vision/PCL/SURF/opencv-2.4.9/modules/nonfree/include)
include_directories(/home/not/code/computer_vision/PCL/SURF/opencv-2.4.9/modules/flann/include)

set(CMAKE_CXX_FLAGS "-g -Wall")
add_executable (${BIN_NAME} src/main.cpp)
add_library (optimizerg2o src/GraphOptimizer_G2O.cpp)
add_library (alignSys src/AlignSystem.cpp)
add_library (oflow src/oflow_pcl.cpp)
add_library (surf src/Surf.cpp)
add_library (edge src/EdgeFilter.cpp)
add_library (utils src/utils.cpp)
add_library (cicp src/CustomICP.cpp)
add_library (bash_util src/BashUtils.cpp)
#target_link_libraries(oflow ${OpenCV_LIBS})
target_link_libraries(alignSys cicp)
target_link_libraries(alignSys bash_util)
target_link_libraries(alignSys optimizerg2o)
target_link_libraries(alignSys surf)
target_link_libraries(oflow opencv_flann)
target_link_libraries(oflow opencv_core)
target_link_libraries(oflow opencv_highgui)
target_link_libraries(oflow opencv_features2d)
target_link_libraries(oflow opencv_calib3d)
target_link_libraries(oflow opencv_imgproc)
target_link_libraries(oflow opencv_video)
target_link_libraries(oflow utils)
target_link_libraries(cicp opencv_flann)
target_link_libraries(cicp opencv_core)
target_link_libraries(cicp opencv_highgui)
target_link_libraries(cicp opencv_features2d)
target_link_libraries(cicp opencv_calib3d)
target_link_libraries(cicp opencv_imgproc)
target_link_libraries(cicp opencv_video)
target_link_libraries(cicp edge)
target_link_libraries(edge utils)
target_link_libraries(surf opencv_flann)
target_link_libraries(surf opencv_nonfree)
target_link_libraries(surf opencv_core)
target_link_libraries(surf opencv_highgui)
target_link_libraries(surf opencv_features2d)
target_link_libraries(surf opencv_calib3d)
target_link_libraries(surf opencv_imgproc)
target_link_libraries(surf opencv_video)
target_link_libraries(surf utils)
target_link_libraries(${BIN_NAME} opencv_flann)
target_link_libraries(${BIN_NAME} opencv_nonfree)
target_link_libraries(${BIN_NAME} opencv_core)
target_link_libraries(${BIN_NAME} opencv_highgui)
target_link_libraries(${BIN_NAME} opencv_features2d)
target_link_libraries(${BIN_NAME} opencv_calib3d)
target_link_libraries(${BIN_NAME} opencv_imgproc)
target_link_libraries(${BIN_NAME} opencv_video)
MESSAGE(STATUS "OPENCV:::::::::" ${OpenCV_LIBS})
MESSAGE(STATUS "LPASF:::::::::" ${CMAKE_LIBRARY_PATH})
target_link_libraries(oflow ${PCL_LIBRARIES})
target_link_libraries(cicp  ${PCL_LIBRARIES})
target_link_libraries(cicp  oflow)
target_link_libraries (${BIN_NAME} oflow)
target_link_libraries (${BIN_NAME} surf)
target_link_libraries (${BIN_NAME} cicp)
target_link_libraries (${BIN_NAME} ${PCL_LIBRARIES})
target_link_libraries(${BIN_NAME} OpenNI)
target_link_libraries(${BIN_NAME} ${PCL_IO_LIBRARIES})
target_link_libraries(${BIN_NAME} ${PCL_VISUALIZATION_LIBRARIES})
target_link_libraries(${BIN_NAME} pcl_visualization)
target_link_libraries(${BIN_NAME} ${PCL_REGISTRATION_LIBRARIES})
target_link_libraries(${BIN_NAME} ${PCL_COMMON_LIBRARIES})
target_link_libraries(${BIN_NAME} ${PCL_KDTREE_LIBRARIES})
MESSAGE(STATUS "KDTREE" ${PCL_VISUALIZATION_LIBRARIES})
target_link_libraries(${BIN_NAME} pcl_octree)
target_link_libraries(${BIN_NAME} pcl_filters)
target_link_libraries(${BIN_NAME} boost_thread)
target_link_libraries(${BIN_NAME} vtkCommon)
target_link_libraries(${BIN_NAME} vtkFiltering)
target_link_libraries(optimizerg2o g2o_core)
target_link_libraries(optimizerg2o g2o_stuff)
target_link_libraries(optimizerg2o g2o_solver_csparse)
target_link_libraries(optimizerg2o g2o_solver_eigen)
target_link_libraries(optimizerg2o g2o_solver_structure_only)
target_link_libraries(optimizerg2o g2o_solver_dense)
target_link_libraries(optimizerg2o g2o_solver_pcg)
target_link_libraries(optimizerg2o g2o_simulator)
target_link_libraries(optimizerg2o g2o_ext_csparse)
target_link_libraries(optimizerg2o g2o_interface)
target_link_libraries(optimizerg2o g2o_cli)
target_link_libraries(optimizerg2o g2o_types_slam3d)
target_link_libraries(optimizerg2o g2o_types_slam2d)
target_link_libraries(optimizerg2o g2o_types_sclam2d)
target_link_libraries(optimizerg2o g2o_types_icp)
target_link_libraries(optimizerg2o g2o_types_data)
target_link_libraries(optimizerg2o g2o_types_sim3)
target_link_libraries(optimizerg2o g2o_types_sba)
target_link_libraries(optimizerg2o g2o_parser)
target_link_libraries(optimizerg2o cholmod)
target_link_libraries(${BIN_NAME} optimizerg2o)
target_link_libraries(${BIN_NAME} bash_util)
target_link_libraries(${BIN_NAME} utils)
target_link_libraries(${BIN_NAME} alignSys)



